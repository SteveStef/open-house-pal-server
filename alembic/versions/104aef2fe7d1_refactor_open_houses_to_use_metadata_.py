"""Refactor open houses to use metadata instead of property references

Revision ID: 104aef2fe7d1
Revises: 0b2751bb27dc
Create Date: 2025-09-01 21:21:10.105454

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '104aef2fe7d1'
down_revision: Union[str, None] = '0b2751bb27dc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Update collections table using batch mode for SQLite
    with op.batch_alter_table('collections') as batch_op:
        batch_op.add_column(sa.Column('original_open_house_event_id', sa.String(), nullable=True))
        batch_op.create_foreign_key('fk_collections_original_open_house_event', 'open_house_events', ['original_open_house_event_id'], ['id'])
        batch_op.drop_column('original_property_id')
    
    # Update open_house_events table using batch mode for SQLite  
    with op.batch_alter_table('open_house_events') as batch_op:
        batch_op.add_column(sa.Column('address', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('abbreviated_address', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('image_src', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('house_type', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('city', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('state', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('zipcode', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('lot_size', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('year_built', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('home_status', sa.String(), nullable=True))
        batch_op.drop_column('property_id')
    
    # Update open_house_visitors table using batch mode for SQLite
    with op.batch_alter_table('open_house_visitors') as batch_op:
        batch_op.add_column(sa.Column('open_house_event_id', sa.String(), nullable=True))
        batch_op.create_foreign_key('fk_visitors_open_house_event', 'open_house_events', ['open_house_event_id'], ['id'])
        batch_op.drop_column('property_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Reverse collections table changes using batch mode for SQLite
    with op.batch_alter_table('collections') as batch_op:
        batch_op.add_column(sa.Column('original_property_id', sa.VARCHAR(), nullable=True))
        batch_op.create_foreign_key('fk_collections_original_property', 'properties', ['original_property_id'], ['id'])
        batch_op.drop_column('original_open_house_event_id')
    
    # Reverse open_house_events table changes using batch mode for SQLite
    with op.batch_alter_table('open_house_events') as batch_op:
        batch_op.add_column(sa.Column('property_id', sa.VARCHAR(), nullable=False))
        batch_op.create_foreign_key('fk_open_house_events_property', 'properties', ['property_id'], ['id'])
        batch_op.drop_column('home_status')
        batch_op.drop_column('year_built')
        batch_op.drop_column('lot_size')
        batch_op.drop_column('zipcode')
        batch_op.drop_column('state')
        batch_op.drop_column('city')
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')
        batch_op.drop_column('house_type')
        batch_op.drop_column('image_src')
        batch_op.drop_column('abbreviated_address')
        batch_op.drop_column('address')
    
    # Reverse open_house_visitors table changes using batch mode for SQLite
    with op.batch_alter_table('open_house_visitors') as batch_op:
        batch_op.add_column(sa.Column('property_id', sa.VARCHAR(), nullable=True))
        batch_op.create_foreign_key('fk_open_house_visitors_property', 'properties', ['property_id'], ['id'])
        batch_op.drop_column('open_house_event_id')
    # ### end Alembic commands ###
